{"version":3,"sources":["../../../../src/@ionic-native/plugins/ionic-native-bluetoothle/mocks/BluetoothLeMock.ts"],"names":[],"mappings":"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","file":"BluetoothLeMock.js","sourceRoot":"","sourcesContent":["import { BluetoothLe } from '../index'\nimport { Observable } from 'rxjs/Observable'\nimport { of } from 'rxjs/observable/of'\nimport { interval } from 'rxjs/observable/interval'\nimport { map } from 'rxjs/operators'\nimport { InitParams, ScanParams, RetrieveConnectedParams, AddressParams, ConnectParams, DiscoverParams, ServicesDiscoverParams, CharacteristicsDiscoverParams, CharacteristicPath } from '../models/BlePluginParams'\nimport { Observer } from 'rxjs/Observer';\n\n// creating temporary enums to avoid ts compiler warning.\n// https://github.com/Microsoft/TypeScript/issues/10570\nenum InitStatus {\n  enable = 'enabled',\n  disable = 'disabled'\n}\n\nenum StartScanStatus {\n  start = 'scanStarted',\n  result = 'scanResult'\n}\n\nenum StopScanStatus {\n  stop = 'scanStopped'\n}\n\nenum BondStatus {\n  bonded = 'bonded',\n  bonding = 'bonding',\n  unbonded = 'unbonded'\n}\n\nenum UnbondStatus {\n  unbonded = 'unbonded'\n}\n\nenum ConnectStatus {\n  connected = 'connected',\n  disconnected = 'disconnected'\n}\n\nenum DisconnectStatus {\n  disconnected = 'disconnected'\n}\n\nenum CloseStatus {\n  closed = 'closed'\n}\n\nenum ServiceStatus {\n  services = 'services'\n}\n\nenum CharacteristicsStatus {\n  characteristics = 'characteristics'\n}\n\nenum DescriptorsStatus {\n  descriptors = 'descriptors'\n}\n\nenum ReadStatus {\n  read = 'read'\n}\n\nenum SubscribeStatus {\n  subscribed = 'subscribed',\n  result = 'subscribedResult'\n}\n\nenum UnsubscribeStatus {\n  unsubscribed = 'unsubscribed',\n}\n\nenum WriteStatus {\n  written = 'written'\n}\n\nexport class BluetoothLeMock extends BluetoothLe {\n\n  initObserver: Observer<any>\n  connectObserver: Observer<any>\n\n  initialize(params?: InitParams): Observable<{\n    status: 'enabled' | 'disabled';\n    message?: string;\n  }> {\n    return Observable.create(function (observer: Observer<any>) {\n      this.initObserver = observer\n      this.initObserver.next({ status: InitStatus.enable })\n    });\n  }\n\n  enable() {\n    if (this.initObserver) {\n      this.initObserver.next({ status: InitStatus.enable })\n    }\n  }\n\n  disable() {\n    if (this.initObserver) {\n      this.initObserver.next({ status: InitStatus.disable })\n    }\n  }\n\n  getAdapterInfo(): Promise<{\n    name: string;\n    address: string;\n    isInitialized: boolean;\n    isEnabled: boolean;\n    isScanning: boolean;\n    isDiscoverable: boolean;\n  }> {\n    return Promise.resolve({\n      name: 'MockAdapter',\n      address: '04:0b:13:54:5f:60',\n      isInitialized: true,\n      isEnabled: true,\n      isScanning: false,\n      isDiscoverable: false\n    })\n  }\n\n  startScan(params?: ScanParams): Observable<{\n    status: 'scanResult' | 'scanStarted';\n    advertisement?: string | any;\n    rssi?: number;\n    name?: string;\n    address?: string;\n  }> {\n    let resp = [\n      { status: StartScanStatus.start },\n      {\n        'address': 'C6:D5:E9:DF:CE:EE',\n        'name': 'SLICE-041Q',\n        'rssi': -80,\n        'advertisement': 'AgEEDv+JATYwUDAwMDQxUUFJCwlTTElDRS0wNDFRAwINGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': StartScanStatus.result\n      },\n      {\n        'address': '2A:12:AA:D3:D2:C5',\n        'name': null,\n        'rssi': -92,\n        'advertisement': 'AgEbC/9MAAkGAxusGRmSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': StartScanStatus.result\n      },\n      {\n        'address': 'E7:85:C7:2D:F8:AF',\n        'name': 'SLICE-16LQ',\n        'rssi': -89, 'advertisement': 'AgEEDv+JATYwUDAwMTZMUUxICwlTTElDRS0xNkxRAwINGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': StartScanStatus.result\n      },\n      {\n        'address': 'C6:D7:C9:0F:72:52',\n        'name': 'LINK2-SJR2',\n        'rssi': -78,\n        'advertisement': 'AgEED/+JATYxUEo2U0pSMklIBQsJTElOSzItU0pSMgMCDRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': StartScanStatus.result\n      }\n    ]\n    return interval(1000).pipe(map(val => {\n      if (val < resp.length) {\n        return resp[val]\n      }\n    }))\n  }\n\n  stopScan(): Promise<{\n    status: 'scanStopped';\n  }> {\n    return Promise.resolve({\n      status: StopScanStatus.stop\n    })\n  }\n\n  retrieveConnected(params?: RetrieveConnectedParams): Promise<Array<{\n    name: string;\n    address: string;\n  }>> {\n    return Promise.resolve([\n      {\n        'address': 'C6:D7:C9:0F:72:52',\n        'name': 'MOCK-040B'\n      },\n      {\n        'address': 'C6:D7:C9:0F:72:52',\n        'name': 'MOCK-1354'\n      }\n    ])\n  }\n\n  bond(params?: AddressParams): Observable<{\n    name: string;\n    address: string;\n    status: 'bonded' | 'bonding' | 'unbonded';\n  }> {\n    let resp = [\n      { name: 'Mock-Dev0', address: params.address, status: BondStatus.bonding },\n      { name: 'Mock-Dev0', address: params.address, status: BondStatus.bonded }\n    ]\n    return interval(2000).pipe(map(val => {\n      if (val < resp.length) {\n        return resp[val]\n      }\n    }))\n  }\n\n  unbond(params?: AddressParams): Observable<{\n    name: string;\n    address: string;\n    status: 'unbonded';\n  }> {\n    return of({\n      name: 'Mock-Dev0',\n      address: params.address,\n      status: UnbondStatus.unbonded\n    })\n  }\n\n  connect(params: ConnectParams): Observable<{\n    name: string;\n    address: string;\n    status: 'connected' | 'disconnected';\n  }> {\n    return Observable.create(function (observer: Observer<any>) {\n      this.connectObserver = observer\n      this.connectObserver.next({\n        name: 'MOCK-Dev0',\n        address: params.address,\n        status: ConnectStatus.connected\n      })\n    })\n  }\n\n  reconnect(params: AddressParams): Promise<{\n    name: string;\n    address: string;\n    status: 'connected' | 'disconnected';\n  }> {\n    if (this.connectObserver) {\n      this.connectObserver.next({\n        name: 'MOCK-Dev0',\n        address: params.address,\n        status: ConnectStatus.connected\n      })\n    }\n    return Promise.resolve({\n      name: 'MOCK-Dev0',\n      address: params.address,\n      status: ConnectStatus.connected\n    })\n  }\n\n  disconnect(params: AddressParams): Promise<{\n    address: string;\n    name: string;\n    status: 'disconnected';\n  }> {\n    if (this.connectObserver) {\n      this.connectObserver.next({\n        name: 'MOCK-Dev0',\n        address: params.address,\n        status: DisconnectStatus.disconnected\n      })\n    }\n    return Promise.resolve({\n      name: 'MOCK-Dev0',\n      address: params.address,\n      status: DisconnectStatus.disconnected\n    })\n  }\n\n  close(params: AddressParams): Promise<{\n    address: string;\n    name: string;\n    status: 'closed';\n  }> {\n    return Promise.resolve({\n      name: 'MOCK-Dev0',\n      address: params.address,\n      status: CloseStatus.closed\n    })\n  }\n\n  discover(params: DiscoverParams): Promise<{\n    status: string;\n    address: string;\n    name: string;\n    services: {\n      uuid: string;\n      characteristics: {\n        uuid: string;\n        descriptors: any[];\n      }[];\n    }[];\n  }> {\n    return Promise.resolve({\n      'address': params.address,\n      'status': 'discovered',\n      'services': [\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a00', // [Device Name](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.device_name.xml)\n              'properties': {\n                'write': true,\n                'writeWithoutResponse': true,\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a01', // [Appearance](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.appearance.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a02', // [Peripheral Privacy Flag](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.peripheral_privacy_flag.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a03', // [Reconnection Address](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.reconnection_address.xml)\n              'properties': {\n                'write': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a04', // [Pheripheral Preferred Connection Parameters](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.peripheral_preferred_connection_parameters.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '1800' // [Generic Access](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.generic_access.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n                {\n                  'uuid': '2902'\n                }\n              ],\n              'uuid': '2a05', // [Service Changed](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gatt.service_changed.xml)\n              'properties': {\n                'indicate': true\n              }\n            }\n          ],\n          'uuid': '1801' // [Generic Attribute](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.generic_attribute.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n                {\n                  'uuid': '2902'\n                }\n              ],\n              'uuid': '2a37', // [Heart Rate Measurement](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml)\n              'properties': {\n                'notify': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a38', // [Body Sensor Location](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.body_sensor_location.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '180d' // [Heart Rate](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.heart_rate.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a23', // [System ID](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.system_id.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a24', // [Model Number String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.model_number_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a25', // [Serial Number String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.serial_number_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a26', // [Firmware Revision String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.firmware_revision_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a27', // [hardware Revision String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.hardware_revision_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a28', // [Software Revision String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.software_revision_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a29', // [Manufacturer Name String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.manufacturer_name_string.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '180a' // [Device Information](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.device_information.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a19', // [Battery Level](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.battery_level.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '180f' // [Battery Service](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.battery_service.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '6217ff4c-c8ec-b1fb-1380-3ad986708e2d',\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n                {\n                  'uuid': '2902'\n                }\n              ],\n              'uuid': '6217ff4d-91bb-91d0-7e2a-7cd3bda8a1f3',\n              'properties': {\n                'write': true,\n                'indicate': true\n              }\n            }\n          ],\n          'uuid': '6217ff4b-fb31-1140-ad5a-a45545d7ecf3'\n        }\n      ],\n      'name': 'MOCK-Dev0'\n    })\n  }\n\n  services(params: ServicesDiscoverParams): Promise<{\n    status: 'services';\n    services: string[];\n    name: string;\n    address: string;\n  }> {\n    return Promise.resolve({\n      'status': ServiceStatus.services,\n      'services': [\n        '180d',\n        '180a',\n        '180f',\n        '6217ff4b-fb31-1140-ad5a-a45545d7ecf3'\n      ],\n      'name': 'Mock-Dev0',\n      'address': params.address\n    })\n  }\n\n  characteristics(params: CharacteristicsDiscoverParams): Promise<any> {\n    return Promise.resolve({\n      'status': CharacteristicsStatus.characteristics,\n      'characteristics': [\n        {\n          'properties': {\n            'notify': true\n          },\n          'uuid': '2a37'\n        },\n        {\n          'properties': {\n            'read': true\n          },\n          'uuid': '2a38'\n        }\n      ],\n      'name': 'Mock-Dev0',\n      'service': '180d',\n      'address': params.address\n    })\n  }\n\n  descriptors(params: {\n    address: string;\n    service: string;\n    characteristic: string;\n  }): Promise<any> {\n    return Promise.resolve({\n      'status': DescriptorsStatus.descriptors,\n      'descriptors': [\n        '2902'\n      ],\n      'characteristic': params.characteristic,\n      'name': 'Mock-Dev0',\n      'service': params.characteristic,\n      'address': params.address\n    })\n  }\n\n  read(params: CharacteristicPath): Promise<{\n    value: string;\n    name: string;\n    status: 'read';\n  } & CharacteristicPath> {\n    return Promise.resolve({\n      address: params.address,\n      service: params.service,\n      characteristic: params.characteristic,\n      value: '',\n      name: 'MOCK-Dev0',\n      status: ReadStatus.read\n    })\n  }\n\n  subscribe(params: CharacteristicPath): Observable<any> {\n    let resp = [\n      {\n        'status': SubscribeStatus.subscribed,\n        'characteristic': params.characteristic,\n        'name': 'Mock-Dev0',\n        'service': params.service,\n        'address': params.address\n      },\n      {\n        'status': SubscribeStatus.result,\n        'value': 'U3Vic2NyaWJlIEhlbGxvIFdvcmxk', // Subscribe Hello World\n        'characteristic': params.characteristic,\n        'name': 'Mock-Dev0',\n        'service': params.service,\n        'address': params.address\n      }\n    ]\n    return interval(1000).pipe(map(val => {\n      if (val < resp.length) {\n        return resp[val]\n      }\n    }))\n  }\n\n  unsubscribe(params: CharacteristicPath): Promise<{\n    status: 'unsubscribed';\n    name: string;\n  } & CharacteristicPath> {\n    return Promise.resolve({\n      'status': UnsubscribeStatus.unsubscribed,\n      'characteristic': params.characteristic,\n      'name': 'Mock-Dev0',\n      'service': params.service,\n      'address': params.address\n    })\n  }\n\n  write(params: ({\n    value: string;\n    type?: 'noResponse';\n  } & CharacteristicPath)): Promise<{\n    status: 'written';\n    value?: string;\n  } & CharacteristicPath> | void {\n    return Promise.resolve({\n      'status': WriteStatus.written,\n      'service': params.service,\n      'characteristic': params.characteristic,\n      'value': 'V3JpdGUgSGVsbG8gV29ybGQ=', // Write Hello World\n      'address': params.address\n    })\n  }\n\n  isInitialized(): Promise<{\n    isInitialized: boolean;\n  }> {\n    return Promise.resolve({ isInitialized: true })\n  }\n  isEnabled(): Promise<{\n    isEnabled: boolean;\n  }> {\n    return Promise.resolve({ isEnabled: true })\n  }\n  isScanning(): Promise<{\n    isScanning: boolean;\n  }> {\n    return Promise.resolve({ isScanning: false })\n  }\n  isBonded(params: AddressParams): Promise<{\n    isBonded: boolean;\n  }> {\n    return Promise.resolve({ isBonded: true })\n  }\n  wasConnected(params: AddressParams): Promise<{\n    wasConnected: boolean;\n  }> {\n    return Promise.resolve({ wasConnected: true })\n  }\n  isConnected(params: AddressParams): Promise<{\n    isConnected: boolean;\n  }> {\n    return Promise.resolve({ isConnected: true })\n  }\n  isDiscovered(params: AddressParams): Promise<{\n    isDiscovered: boolean;\n  }> {\n    return Promise.resolve({ isDiscovered: true })\n  }\n}\n"]}