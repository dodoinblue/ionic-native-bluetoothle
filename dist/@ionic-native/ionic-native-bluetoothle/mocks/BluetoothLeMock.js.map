{"version":3,"sources":["../../../../src/@ionic-native/plugins/ionic-native-bluetoothle/mocks/BluetoothLeMock.ts"],"names":[],"mappings":"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","file":"BluetoothLeMock.js","sourceRoot":"","sourcesContent":["import { BluetoothLe } from '../BluetoothLe'\nimport { Observable } from 'rxjs/Observable'\nimport { of } from 'rxjs/observable/of'\nimport { interval } from 'rxjs/observable/interval'\nimport { map } from 'rxjs/operators'\nimport * as BlePluginParams from '../models/BlePluginParams'\nimport { Observer } from 'rxjs/Observer';\n\nexport class BluetoothLeMock extends BluetoothLe {\n\n  initObserver: Observer<any>\n  connectObserver: Observer<any>\n\n  initialize(params?: BlePluginParams.InitParams): Observable<{\n    status: 'enabled' | 'disabled';\n    message?: string;\n  }> {\n    return Observable.create(function (observer: Observer<any>) {\n      this.initObserver = observer\n      this.initObserver.next({ status: BlePluginParams.InitStatus.enable })\n    });\n  }\n\n  enable() {\n    if (this.initObserver) {\n      this.initObserver.next({ status: BlePluginParams.InitStatus.enable })\n    }\n  }\n\n  disable() {\n    if (this.initObserver) {\n      this.initObserver.next({ status: BlePluginParams.InitStatus.disable })\n    }\n  }\n\n  getAdapterInfo(): Promise<{\n    name: string;\n    address: string;\n    isInitialized: boolean;\n    isEnabled: boolean;\n    isScanning: boolean;\n    isDiscoverable: boolean;\n  }> {\n    return Promise.resolve({\n      name: 'MockAdapter',\n      address: '04:0b:13:54:5f:60',\n      isInitialized: true,\n      isEnabled: true,\n      isScanning: false,\n      isDiscoverable: false\n    })\n  }\n\n  startScan(params?: BlePluginParams.ScanParams): Observable<{\n    status: 'scanResult' | 'scanStarted';\n    advertisement?: string | any;\n    rssi?: number;\n    name?: string;\n    address?: string;\n  }> {\n    let resp = [\n      { status: BlePluginParams.StartScanStatus.start },\n      {\n        'address': 'C6:D5:E9:DF:CE:EE',\n        'name': 'SLICE-041Q',\n        'rssi': -80,\n        'advertisement': 'AgEEDv+JATYwUDAwMDQxUUFJCwlTTElDRS0wNDFRAwINGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': BlePluginParams.StartScanStatus.result\n      },\n      {\n        'address': '2A:12:AA:D3:D2:C5',\n        'name': null,\n        'rssi': -92,\n        'advertisement': 'AgEbC/9MAAkGAxusGRmSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': BlePluginParams.StartScanStatus.result\n      },\n      {\n        'address': 'E7:85:C7:2D:F8:AF',\n        'name': 'SLICE-16LQ',\n        'rssi': -89, 'advertisement': 'AgEEDv+JATYwUDAwMTZMUUxICwlTTElDRS0xNkxRAwINGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': BlePluginParams.StartScanStatus.result\n      },\n      {\n        'address': 'C6:D7:C9:0F:72:52',\n        'name': 'LINK2-SJR2',\n        'rssi': -78,\n        'advertisement': 'AgEED/+JATYxUEo2U0pSMklIBQsJTElOSzItU0pSMgMCDRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=',\n        'status': BlePluginParams.StartScanStatus.result\n      }\n    ]\n    return interval(1000).pipe(map(val => {\n      if (val < resp.length) {\n        return resp[val]\n      }\n    }))\n  }\n\n  stopScan(): Promise<{\n    status: 'scanStopped';\n  }> {\n    return Promise.resolve({\n      status: BlePluginParams.StopScanStatus.stop\n    })\n  }\n\n  retrieveConnected(params?: BlePluginParams.RetrieveConnectedParams): Promise<Array<{\n    name: string;\n    address: string;\n  }>> {\n    return Promise.resolve([\n      {\n        'address': 'C6:D7:C9:0F:72:52',\n        'name': 'MOCK-040B'\n      },\n      {\n        'address': 'C6:D7:C9:0F:72:52',\n        'name': 'MOCK-1354'\n      }\n    ])\n  }\n\n  bond(params?: BlePluginParams.AddressParams): Observable<{\n    name: string;\n    address: string;\n    status: 'bonded' | 'bonding' | 'unbonded';\n  }> {\n    let resp = [\n      { name: 'Mock-Dev0', address: params.address, status: BlePluginParams.BondStatus.bonding },\n      { name: 'Mock-Dev0', address: params.address, status: BlePluginParams.BondStatus.bonded }\n    ]\n    return interval(2000).pipe(map(val => {\n      if (val < resp.length) {\n        return resp[val]\n      }\n    }))\n  }\n\n  unbond(params?: BlePluginParams.AddressParams): Observable<{\n    name: string;\n    address: string;\n    status: 'unbonded';\n  }> {\n    return of({\n      name: 'Mock-Dev0',\n      address: params.address,\n      status: BlePluginParams.UnbondStatus.unbonded\n    })\n  }\n\n  connect(params: BlePluginParams.ConnectParams): Observable<{\n    name: string;\n    address: string;\n    status: 'connected' | 'disconnected';\n  }> {\n    return Observable.create(function (observer: Observer<any>) {\n      this.connectObserver = observer\n      this.connectObserver.next({\n        name: 'MOCK-Dev0',\n        address: params.address,\n        status: BlePluginParams.ConnectStatus.connected\n      })\n    })\n  }\n\n  reconnect(params: BlePluginParams.AddressParams): Promise<{\n    name: string;\n    address: string;\n    status: 'connected' | 'disconnected';\n  }> {\n    if (this.connectObserver) {\n      this.connectObserver.next({\n        name: 'MOCK-Dev0',\n        address: params.address,\n        status: BlePluginParams.ConnectStatus.connected\n      })\n    }\n    return Promise.resolve({\n      name: 'MOCK-Dev0',\n      address: params.address,\n      status: BlePluginParams.ConnectStatus.connected\n    })\n  }\n\n  disconnect(params: BlePluginParams.AddressParams): Promise<{\n    address: string;\n    name: string;\n    status: 'disconnected';\n  }> {\n    if (this.connectObserver) {\n      this.connectObserver.next({\n        name: 'MOCK-Dev0',\n        address: params.address,\n        status: BlePluginParams.DisconnectStatus.disconnected\n      })\n    }\n    return Promise.resolve({\n      name: 'MOCK-Dev0',\n      address: params.address,\n      status: BlePluginParams.DisconnectStatus.disconnected\n    })\n  }\n\n  close(params: BlePluginParams.AddressParams): Promise<{\n    address: string;\n    name: string;\n    status: 'closed';\n  }> {\n    return Promise.resolve({\n      name: 'MOCK-Dev0',\n      address: params.address,\n      status: BlePluginParams.CloseStatus.closed\n    })\n  }\n\n  discover(params: BlePluginParams.DiscoverParams): Promise<{\n    status: string;\n    address: string;\n    name: string;\n    services: {\n      uuid: string;\n      characteristics: {\n        uuid: string;\n        descriptors: any[];\n      }[];\n    }[];\n  }> {\n    return Promise.resolve({\n      'address': params.address,\n      'status': 'discovered',\n      'services': [\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a00', // [Device Name](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.device_name.xml)\n              'properties': {\n                'write': true,\n                'writeWithoutResponse': true,\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a01', // [Appearance](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.appearance.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a02', // [Peripheral Privacy Flag](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.peripheral_privacy_flag.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a03', // [Reconnection Address](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.reconnection_address.xml)\n              'properties': {\n                'write': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a04', // [Pheripheral Preferred Connection Parameters](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.peripheral_preferred_connection_parameters.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '1800' // [Generic Access](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.generic_access.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n                {\n                  'uuid': '2902'\n                }\n              ],\n              'uuid': '2a05', // [Service Changed](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gatt.service_changed.xml)\n              'properties': {\n                'indicate': true\n              }\n            }\n          ],\n          'uuid': '1801' // [Generic Attribute](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.generic_attribute.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n                {\n                  'uuid': '2902'\n                }\n              ],\n              'uuid': '2a37', // [Heart Rate Measurement](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml)\n              'properties': {\n                'notify': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a38', // [Body Sensor Location](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.body_sensor_location.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '180d' // [Heart Rate](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.heart_rate.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a23', // [System ID](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.system_id.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a24', // [Model Number String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.model_number_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a25', // [Serial Number String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.serial_number_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a26', // [Firmware Revision String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.firmware_revision_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a27', // [hardware Revision String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.hardware_revision_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a28', // [Software Revision String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.software_revision_string.xml)\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a29', // [Manufacturer Name String](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.manufacturer_name_string.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '180a' // [Device Information](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.device_information.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '2a19', // [Battery Level](https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.battery_level.xml)\n              'properties': {\n                'read': true\n              }\n            }\n          ],\n          'uuid': '180f' // [Battery Service](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.battery_service.xml)\n        },\n        {\n          'characteristics': [\n            {\n              'descriptors': [\n\n              ],\n              'uuid': '6217ff4c-c8ec-b1fb-1380-3ad986708e2d',\n              'properties': {\n                'read': true\n              }\n            },\n            {\n              'descriptors': [\n                {\n                  'uuid': '2902'\n                }\n              ],\n              'uuid': '6217ff4d-91bb-91d0-7e2a-7cd3bda8a1f3',\n              'properties': {\n                'write': true,\n                'indicate': true\n              }\n            }\n          ],\n          'uuid': '6217ff4b-fb31-1140-ad5a-a45545d7ecf3'\n        }\n      ],\n      'name': 'MOCK-Dev0'\n    })\n  }\n\n  services(params: BlePluginParams.ServicesDiscoverParams): Promise<{\n    status: 'services';\n    services: string[];\n    name: string;\n    address: string;\n  }> {\n    return Promise.resolve({\n      'status': BlePluginParams.ServiceStatus.services,\n      'services': [\n        '180d',\n        '180a',\n        '180f',\n        '6217ff4b-fb31-1140-ad5a-a45545d7ecf3'\n      ],\n      'name': 'Mock-Dev0',\n      'address': params.address\n    })\n  }\n\n  characteristics(params: BlePluginParams.CharacteristicsDiscoverParams): Promise<any> {\n    return Promise.resolve({\n      'status': BlePluginParams.CharacteristicsStatus.characteristics,\n      'characteristics': [\n        {\n          'properties': {\n            'notify': true\n          },\n          'uuid': '2a37'\n        },\n        {\n          'properties': {\n            'read': true\n          },\n          'uuid': '2a38'\n        }\n      ],\n      'name': 'Mock-Dev0',\n      'service': '180d',\n      'address': params.address\n    })\n  }\n\n  descriptors(params: {\n    address: string;\n    service: string;\n    characteristic: string;\n  }): Promise<any> {\n    return Promise.resolve({\n      'status': BlePluginParams.DescriptorsStatus.descriptors,\n      'descriptors': [\n        '2902'\n      ],\n      'characteristic': params.characteristic,\n      'name': 'Mock-Dev0',\n      'service': params.characteristic,\n      'address': params.address\n    })\n  }\n\n  read(params: BlePluginParams.CharacteristicPath): Promise<{\n    value: string;\n    name: string;\n    status: 'read';\n  } & BlePluginParams.CharacteristicPath> {\n    return Promise.resolve({\n      address: params.address,\n      service: params.service,\n      characteristic: params.characteristic,\n      value: '',\n      name: 'MOCK-Dev0',\n      status: BlePluginParams.ReadStatus.read\n    })\n  }\n\n  subscribe(params: BlePluginParams.CharacteristicPath): Observable<any> {\n    let resp = [\n      {\n        'status': BlePluginParams.SubscribeStatus.subscribed,\n        'characteristic': params.characteristic,\n        'name': 'Mock-Dev0',\n        'service': params.service,\n        'address': params.address\n      },\n      {\n        'status': BlePluginParams.SubscribeStatus.result,\n        'value': 'U3Vic2NyaWJlIEhlbGxvIFdvcmxk', // Subscribe Hello World\n        'characteristic': params.characteristic,\n        'name': 'Mock-Dev0',\n        'service': params.service,\n        'address': params.address\n      }\n    ]\n    return interval(1000).pipe(map(val => {\n      if (val < resp.length) {\n        return resp[val]\n      }\n    }))\n  }\n\n  unsubscribe(params: BlePluginParams.CharacteristicPath): Promise<{\n    status: 'unsubscribed';\n    name: string;\n  } & BlePluginParams.CharacteristicPath> {\n    return Promise.resolve({\n      'status': BlePluginParams.UnsubscribeStatus.unsubscribed,\n      'characteristic': params.characteristic,\n      'name': 'Mock-Dev0',\n      'service': params.service,\n      'address': params.address\n    })\n  }\n\n  write(params: ({\n    value: string;\n    type?: 'noResponse';\n  } & BlePluginParams.CharacteristicPath)): Promise<{\n    status: 'written';\n    value?: string;\n  } & BlePluginParams.CharacteristicPath> | void {\n    return Promise.resolve({\n      'status': BlePluginParams.WriteStatus.written,\n      'service': params.service,\n      'characteristic': params.characteristic,\n      'value': 'V3JpdGUgSGVsbG8gV29ybGQ=', // Write Hello World\n      'address': params.address\n    })\n  }\n\n  isInitialized(): Promise<{\n    isInitialized: boolean;\n  }> {\n    return Promise.resolve({ isInitialized: true })\n  }\n  isEnabled(): Promise<{\n    isEnabled: boolean;\n  }> {\n    return Promise.resolve({ isEnabled: true })\n  }\n  isScanning(): Promise<{\n    isScanning: boolean;\n  }> {\n    return Promise.resolve({ isScanning: false })\n  }\n  isBonded(params: BlePluginParams.AddressParams): Promise<{\n    isBonded: boolean;\n  }> {\n    return Promise.resolve({ isBonded: true })\n  }\n  wasConnected(params: BlePluginParams.AddressParams): Promise<{\n    wasConnected: boolean;\n  }> {\n    return Promise.resolve({ wasConnected: true })\n  }\n  isConnected(params: BlePluginParams.AddressParams): Promise<{\n    isConnected: boolean;\n  }> {\n    return Promise.resolve({ isConnected: true })\n  }\n  isDiscovered(params: BlePluginParams.AddressParams): Promise<{\n    isDiscovered: boolean;\n  }> {\n    return Promise.resolve({ isDiscovered: true })\n  }\n}\n"]}